<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Screen Razzle Dazzle

window_set_fullscreen(true)

//How big is the screen?
ScreenWidth = display_get_width()
ScreenHeight = display_get_height()

//Set size of window - you don't need to do this in full screen
//window_set_size(ScreenWidth,ScreenHeight)

//How much of the room do we want on-screen?
view_wview = ScreenWidth
view_hview = ScreenHeight

//How much of our screen do we want that to take up?
view_wport = ScreenWidth
view_hport = ScreenHeight

//Some weird game maker razzle dazzle that Tom Francis says we need
surface_resize(application_surface,ScreenWidth,ScreenHeight)


//Controller Button Mapping
gp_A=gp_face1;
gp_B=gp_face2;
gp_X=gp_face3;
gp_Y=gp_face4;
gp_Rbumper=gp_shoulderr;
gp_Lbumper=gp_shoulderl;
gp_Rtrig=gp_shoulderrb;
gp_Ltrig=gp_shoulderlb;
gp_Dpad_R=gp_padr;
gp_Dpad_L=gp_padl;
gp_Dpad_U=gp_padu;
gp_Dpad_D=gp_padd;
gp_Select=gp_select;
gp_Start=gp_start;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Events


//Restart Room
if keyboard_check_pressed(ord('R'))
{
    room_persistent = false;
    room_restart();
}

//End Game
if keyboard_check_pressed(vk_escape) {
    game_end()
}

//Parallex Code
background_x[2] = view_xview[0] * -0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
