<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables for Player
grav = 2;
hsp = 0;
vsp = 0;
jumpspeed = 16;
movespeed = 6;

//Lighting Code (Not Functioning)
//caster_init(); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Get the player's input
key_right = keyboard_check(ord('D')) 
key_left = -keyboard_check(ord('A'))
key_jump = keyboard_check_pressed(vk_space)

//React to inputs
move = key_left + key_right;
hsp = move * movespeed;
if (vsp &lt; 10) vsp += grav;

if (place_meeting(x,y+1,obj_floor))
{
    vsp = key_jump * -jumpspeed
}

//Horizontal Collision
if (place_meeting(x+hsp,y,obj_floor))
{
    while(!place_meeting(x+sign(hsp),y,obj_floor))
    {
        x += sign(hsp);
        y += sign(vsp);
    }
    hsp = 0;
}
x += hsp;

//Vertical Collision
if (place_meeting(x,y+vsp,obj_floor))
{
    while(!place_meeting(x,y+sign(vsp),obj_floor))
    {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;


//Staying inside the room
if x &lt; 50 { x = 50 }
if y &lt; 0 { y = 0 }
if x &gt; room_width-50 { x = room_width-50 }
if y &gt; room_height-75 { y = room_height-75 }
    
/*Controller Support for Movement - In Alpha
if !place_free(x,y+1) 
and gamepad_button_check(0,gp_A){
    vspeed=-jumpspeed;
}

if gamepad_axis_value(0,gp_axislh)&gt;0.7
and gamepad_button_check(0,gp_A){
        x+=spd+2;
}

if gamepad_axis_value(0,gp_axislh)&lt;-0.7
and gamepad_button_check(0,gp_A){
        x-=spd+2;
}

if place_free(x,y) and gamepad_button_check(0,gp_Rtrig)
    and gamepad_axis_value(0,gp_axislh)&gt;0.7 {
    x+=spd+0.4;
}

if place_free(x,y) and gamepad_button_check(0,gp_Rtrig)
    and gamepad_axis_value(0,gp_axislh)&lt;-0.7{
    x-=spd+0.4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_contact_solid(direction,0.1); vspeed=0 hspeed=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Old collision code 
//dmove_contact_solid(direction,12); vspeed=0 hspeed=0 


// Checks Collision with invisible floor

if (!place_free(x+hspeed,y))
{
    if (hspeed&lt;=0){move_contact_solid(180,abs(hspeed));}
    if (hspeed&gt;0){move_contact_solid(0,abs(hspeed));}
    hspeed=0;
}
  
if (!place_free(x,y+vspeed))
{
    if (vspeed&lt;=0){move_contact_solid(90,abs(vspeed));}
    if (vspeed&gt;0){move_contact_solid(270,abs(vspeed));djump=1}
    vspeed=0;
}

if (!place_free(x+hspeed,y+vspeed))
{
    hspeed=0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_free(x,y)and keyboard_check(ord('A')){x-=movespeed+10} 
if place_free(x,y)and keyboard_check(ord('D')){x+=movespeed+10} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>-58,-67</point>
    <point>58,-67</point>
    <point>58,67</point>
    <point>-58,67</point>
  </PhysicsShapePoints>
</object>
